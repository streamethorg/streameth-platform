{"id":"zkswift_a_programming_language_for_highperformance_zk_circuits","name":"ZKSwift: A Programming Language for High-Performance ZK Circuits","description":"Existing languages for writing ZK circuits are either too high-level to be compatible with performance optimization, or too low-level that are error-prone and difficult to master. We designed a new type of programming language, ZKSwift, for balancing performance optimization and usability, which brings the best of both designs. ZKSwift enables easy and fine-grained control over different ZK components, and learns to optimize in an automatic way along with guidance based on usage. In this talk, we will cover the most important features and designs of ZKSwift, which is important to not only ZK performance optimization, but also ZK security/verification. The audience will learn about how to start coding with ZKSwift as well as constructing safe and optimized ZK circuits via ZKSwift.","start":1700134500000,"end":1700135400000,"stageId":"dolmabahce_b__c","speakers":[{"id":"yanju_chen","name":"Yanju Chen","bio":"Yanju Chen is a research scientist at Veridise. He earned his Ph.D. in Computer Science at University of California, Santa Barbara, where his research focuses on program verification, in particular for ZK security. With Veridise, heâ€™s the main designer and contributor of its ZK automated verification tool for under-constraint (Picus), which joins the ZK security toolchain (Picus/ZKap/Coda/ZKVanguard) from Veridise.","eventId":"progcrypto","twitter":"","photo":"https://drive.google.com/uc?id=1euUEp7wNltqj3gosd3rxwDTeKfqwKxwC"}],"playbackId":"","eventId":"progcrypto","coverImage":"/sessions/progcrypto/zkswift_a_programming_language_for_highperformance_zk_circuits.jpg"}