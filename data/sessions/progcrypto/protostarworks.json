{"id":"protostarworks","name":"protostar-works","description":"One of the more recent folding schemes, Protostar, has an unusual property - the arithmetization used in it is neither plonkish, nor R1CS, nor CCS. In fact, it is \"generic\" - i.e., constraint system is just a collection of algebraic equations of arbitrary form.\n\nMoreover, it is expected that significant performance gains can be obtained by using equations of relatively high degree.\n\nIn this talk, I will present my circuit builder for generic arithmetization, which I have used to implement Protostar, demonstrate how to use it, and talk about some tricks with high-degree polynomias allowing to drop the witness size significantly.\n\nPrerequisites: practically, you do not need to understand details about folding to write circuits in generic arithmetization; however, it will surely help in some parts of the talk.","start":1700228700000,"end":1700229600000,"stageId":"marmara","speakers":[{"id":"lev_soukhanov","name":"Lev Soukhanov","bio":"An algebraic geometer by education, I'm now exploring the realm of cryptography to bring positive societal change to everyone. I'm mainly interested in anything privacy-related, and especially efficient and lightweight zero knowledge proofs.\n\nMy current focus of research is folding schemes, which, I hope, some day, will enable us to prove a lot of elaborate things client-side - like zk-poex or proofs of execution of various distributed protocols.","eventId":"progcrypto","twitter":"","photo":"https://drive.google.com/file/d/1utdXLdrNR4jBho4nyEly17sIM94wBlDB/view"}],"playbackId":"","eventId":"progcrypto","coverImage":"/sessions/progcrypto/protostarworks.jpg"}