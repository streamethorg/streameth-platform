{"id":"applying_batch_proofs_and_vector_commitments_to_blockchain_applications","name":"Applying Batch Proofs and Vector Commitments to Blockchain Applications","description":"In this talk, we’d like to start with a basic overview of batch proofs and vector commitments, ranging from simple range proofs to more complicated constructions such as Hyperproofs.\n\nNext our team would like to presented a paper on a new vector commitment called Recproofs that we first introduced at the Science of Blockchain Conference (SBC) last August.   Recproofs are a Merkle-based vector commitment that computes a batch proof of a subset of k leaves in a Merkle tree of n leaves using recursive SNARKs. Our construction folds the computation of the subset hash inside the computation of Merkle verification via canonical hashing. \n\nDue to this folding, our batch proofs can be updated in logarithmic time, whenever a Merkle tree element (belonging in the batch or not) changes, by maintaining a data structure that stores previously computed recursive proofs. Each incremental update to a Recproof is 135x more efficient than recomputing a proof from scratch with other techniques.\n\nRecproofs are optimized for onchain applications that require computing and efficiently maintain a proof over a moving stream of blocks. Applications include verifiable volatility feeds, price feeds and airdrops based on onchain activity.\n\nSource: https://lagrange.dev/recproofs","start":1700218800000,"end":1700219700000,"stageId":"marmara","speakers":[{"id":"ismael_hishonrezaizadeh","name":"Ismael Hishon-Rezaizadeh","bio":"Ismael is the founder of Lagrange Labs an early-stage company focused on applied cryptography research. Lagrange Labs focuses on developing proving systems that enable efficiently proving data-parallel computation (SQL, MapReduce, Spark, etc) run over onchain state.\n\nLagrange Labs presented their first paper, Recproofs, at Stanford Blockchain Conference (SBC) this August. Lagrange Labs previously raised a seed round led by 1kx in early-2023.","eventId":"progcrypto","twitter":"","photo":"https://drive.google.com/file/d/1ggxetYAK1Ao1QELs5AFOEdiih5FhuDpk/view"}],"playbackId":"","eventId":"progcrypto","coverImage":"/sessions/progcrypto/applying_batch_proofs_and_vector_commitments_to_blockchain_applications.jpg","track":"Libraries and Infrastructure"}